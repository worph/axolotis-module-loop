{"version":3,"sources":["../src/index.ts","../../../node_modules/reflect-metadata/Reflect.js","../src/Identifier.ts","../src/services/loop/AnimationFrameLoopFactory.ts","../src/services/loop/FrameLoopManager.ts","../src/services/loop/SetIntervalLoopFactory.ts","../src/services/loop/SetTimeoutLoopFactory.ts","../src/services/perf/TimeLogger.ts"],"sourcesContent":["import \"reflect-metadata\";\r\n\r\nimport {AxModule} from \"axolotis-module-definition\";\r\nimport {ContainerModule, interfaces} from \"inversify\";\r\nimport {\r\n    AnimationFrameLoopFactoryName,\r\n    FrameLoopManagerName,\r\n    SetIntervalLoopFactoryName,\r\n    SetTimeoutLoopFactoryName,\r\n    TimeLoggerName\r\n} from \"./Identifier\";\r\nimport {AnimationFrameLoopFactory} from \"./services/loop/AnimationFrameLoopFactory\";\r\nimport {FrameLoopManager} from \"./services/loop/FrameLoopManager\";\r\nimport {SetIntervalLoopFactory} from \"./services/loop/SetIntervalLoopFactory\";\r\nimport {SetTimeoutLoopFactory} from \"./services/loop/SetTimeoutLoopFactory\";\r\nimport {TimeLogger} from \"./services/perf/TimeLogger\";\r\n\r\nexport * from \"./services/loop/FrameLoopManager\";\r\nexport * from \"./services/loop/AnimationFrameLoopFactory\"\r\nexport * from \"./services/loop/LoopInterface\"\r\nexport * from \"./services/loop/SetIntervalLoopFactory\"\r\nexport * from \"./services/loop/SetTimeoutLoopFactory\"\r\n\r\nexport * from \"./services/perf/TimeLogger\"\r\n\r\nexport * from \"./Identifier\";\r\n\r\nexport class AxLoopModule implements AxModule {\r\n    getModule(): ContainerModule {\r\n        return new ContainerModule((bind: interfaces.Bind) => {\r\n            bind(FrameLoopManagerName).to(FrameLoopManager).inSingletonScope();\r\n            bind(TimeLoggerName).to(TimeLogger).inSingletonScope();\r\n            bind(AnimationFrameLoopFactoryName).to(AnimationFrameLoopFactory).inSingletonScope();\r\n            bind(SetTimeoutLoopFactoryName).to(SetTimeoutLoopFactory).inSingletonScope();\r\n            bind(SetIntervalLoopFactoryName).to(SetIntervalLoopFactory).inSingletonScope();\r\n        });\r\n    }\r\n\r\n}\r\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","export const FrameLoopManagerName = Symbol.for(\"FrameLoopManagerName\");\r\nexport const AnimationFrameLoopFactoryName = Symbol.for(\"AnimationFrameLoopFactoryName\");\r\nexport const SetIntervalLoopFactoryName = Symbol.for(\"SetIntervalLoopFactoryName\");\r\nexport const SetTimeoutLoopFactoryName = Symbol.for(\"SetTimeoutLoopFactoryName\");\r\nexport const TimeLoggerName = Symbol.for(\"TimeLoggerName\");\r\n","import {inject, injectable} from \"inversify\";\r\nimport {FrameLoopManagerName, TimeLoggerName} from \"../../Identifier\";\r\nimport {TimeLogger, TimeLoggerInterface} from \"../perf/TimeLogger\";\r\nimport {FrameLoopManager} from \"./FrameLoopManager\";\r\nimport {LoopCallback, LoopInterface, LoopRemoverInterface} from \"./LoopInterface\";\r\n\r\nexport class AnimationFrameLoop implements LoopInterface {\r\n    enable = false;\r\n\r\n    constructor(private callback: LoopCallback, private timeLogger: TimeLoggerInterface) {\r\n    }\r\n\r\n    start() {\r\n        if(this.enable){\r\n            throw new Error(\"Loop already started\");\r\n        }\r\n        this.enable = true;\r\n        let prevTime: number = 0;\r\n        const animate = (t) => {\r\n            const delta = t - prevTime;\r\n            prevTime = t;\r\n            if(this.enable) {\r\n                requestAnimationFrame(animate);\r\n            }\r\n            this.timeLogger.monitoringStart();\r\n            this.callback(delta);\r\n            this.timeLogger.monitoringEnd();\r\n        };\r\n        requestAnimationFrame(animate);\r\n    }\r\n\r\n    stop() {\r\n        this.enable = false;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class AnimationFrameLoopFactory {\r\n\r\n    constructor(\r\n        @inject(TimeLoggerName) private timeLogger:TimeLogger,\r\n        @inject(FrameLoopManagerName) private frameLoop: FrameLoopManager\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Create a loop based on requestAnimationFrame.\r\n     * Note tha if the focus is lost, the loop will be paused thus it should only be used for GFX and not for logic.\r\n     * @param name\r\n     * @param callback\r\n     */\r\n    create(name: string, callback:LoopCallback): LoopRemoverInterface {\r\n        let loop = new AnimationFrameLoop(callback, this.timeLogger.getTimeLogger(name));\r\n        this.frameLoop.addLoop(name,loop);\r\n        return {\r\n            loop: loop,\r\n            remover: () => {\r\n                this.frameLoop.removeLoop(name);\r\n            }\r\n        };\r\n    }\r\n}\r\n","import {injectable} from \"inversify\";\r\nimport {LoopInterface} from \"./LoopInterface\";\r\n/**Centralized controller for all loop\r\n**/\r\n@injectable()\r\nexport class FrameLoopManager {\r\n    //TODO\r\n    // low workload adaptative loop? Like when FPS is green we execute code once evry Frame when it is not we execute once every seconde.\r\n    // worker loop?\r\n\r\n    started = false;\r\n    constructor() {\r\n    }\r\n\r\n    loops = new Map<string, LoopInterface>();\r\n\r\n\r\n    start() {\r\n        this.started = true;\r\n        for (const [key,entry] of this.loops) {\r\n            entry.start();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        this.started = false;\r\n        for (const [key,entry] of this.loops) {\r\n            entry.stop();\r\n        }\r\n    }\r\n\r\n    addLoop(name:string,loop:LoopInterface): () => void {\r\n        if(this.loops.has(name)){\r\n            throw new Error(\"Loop name already used :\"+name);\r\n        }\r\n        if(this.started) {\r\n            loop.start();\r\n        }\r\n        this.loops.set(name,loop);\r\n        return () => {\r\n            this.removeLoop(name);\r\n        }\r\n    }\r\n\r\n    removeLoop(name:string) {\r\n        this.loops.get(name).stop();\r\n        this.loops.delete(name);\r\n    }\r\n\r\n}\r\n","import {inject, injectable} from \"inversify\";\r\nimport {FrameLoopManagerName, TimeLoggerName} from \"../../Identifier\";\r\nimport {TimeLogger, TimeLoggerInterface} from \"../perf/TimeLogger\";\r\nimport {FrameLoopManager} from \"./FrameLoopManager\";\r\nimport {LoopCallback, LoopInterface, LoopRemoverInterface} from \"./LoopInterface\";\r\n\r\n/**\r\n * Using `setInterval` to create a loop has its own advantages and drawbacks. Here are some key points to consider:\r\n *\r\n * Advantages:\r\n *\r\n * 1. **Simplicity:** `setInterval` is straightforward to use and easy to understand. It allows you to create a loop that executes a function at regular intervals with a simple syntax.\r\n * ```javascript\r\n * const intervalId = setInterval(myFunction, interval);\r\n * ```\r\n *\r\n * 2. **Consistent intervals:** With `setInterval`, the time between each function call is fixed, ensuring a consistent interval between iterations. This is useful when you need to perform a task periodically, like updating the UI or polling a server.\r\n *\r\n * 3. **Automatic loop:** Once `setInterval` is called, it will continue to execute the specified function at the given interval until it's explicitly stopped using `clearInterval`. This means you don't need to manually schedule the next call within the function.\r\n *\r\n * Drawbacks:\r\n *\r\n * 1. **Fixed interval:** The interval between function calls is fixed, which means you cannot dynamically adjust the time between calls based on processing time or other conditions. If you need a dynamic interval, you'll need to use `setTimeout` instead.\r\n *\r\n * 2. **Overlapping calls:** If the processing time of the function is longer than the interval, it may lead to overlapping calls, causing potential issues. To avoid this, you can either increase the interval or use `setTimeout` to ensure that the next call is scheduled only after the current call has completed.\r\n *\r\n * 3. **Stopping the loop:** To stop a loop created with `setInterval`, you need to call `clearInterval` with the interval ID that was returned when the loop was created. You might need to add additional checks or flags to control this behavior, which can be more complex compared to using `setTimeout`, where you can conditionally decide whether to continue the loop or not by scheduling the next call based on a condition within the function.\r\n *\r\n * 4. **Less control over execution order:** With `setInterval`, you have less control over the execution order, especially when dealing with asynchronous code or when the interval is very short. This can lead to unexpected behavior.\r\n *\r\n * In summary, using `setInterval` to create a loop is suitable for simple, periodic tasks with a fixed interval. However, if you need more control over the loop execution or need a dynamic interval between function calls, using `setTimeout` might be more appropriate.\r\n */\r\nexport class SetIntervalLoop implements LoopInterface {\r\n    private intervalId = null;\r\n\r\n    constructor(private callback: LoopCallback, private timeLogger: TimeLoggerInterface,private intervalMs:number) {\r\n    }\r\n\r\n    start() {\r\n        if(this.intervalId){\r\n            throw new Error(\"Loop already started\");\r\n        }\r\n        let prevTime: number = 0;\r\n        const animate = (t) => {\r\n            const delta = t - prevTime;\r\n            prevTime = t;\r\n            this.timeLogger.monitoringStart();\r\n            this.callback(delta);\r\n            this.timeLogger.monitoringEnd();\r\n        };\r\n        this.intervalId = setInterval(animate, this.intervalMs);\r\n    }\r\n\r\n    stop() {\r\n        if(this.intervalId){\r\n            this.intervalId = null;\r\n            clearInterval(this.intervalId);\r\n        }\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SetIntervalLoopFactory {\r\n\r\n    constructor(\r\n        @inject(TimeLoggerName) private timeLogger:TimeLogger,\r\n        @inject(FrameLoopManagerName) private frameLoop: FrameLoopManager\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Create a loop based on setInterval.\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/setInterval#ensure_that_execution_duration_is_shorter_than_interval_frequency\r\n     * @param name\r\n     * @param callback\r\n     * @param intervalMs\r\n     */\r\n    create(name: string, callback:LoopCallback,intervalMs:number=0): LoopRemoverInterface {\r\n        let loop = new SetIntervalLoop(callback, this.timeLogger.getTimeLogger(name),intervalMs);\r\n        this.frameLoop.addLoop(name,loop);\r\n        return {\r\n            loop: loop,\r\n            remover: () => {\r\n                this.frameLoop.removeLoop(name);\r\n            }\r\n        };\r\n    }\r\n}\r\n","import {inject, injectable} from \"inversify\";\r\nimport {FrameLoopManagerName, TimeLoggerName} from \"../../Identifier\";\r\nimport {TimeLogger, TimeLoggerInterface} from \"../perf/TimeLogger\";\r\nimport {FrameLoopManager} from \"./FrameLoopManager\";\r\nimport {LoopCallback, LoopInterface, LoopRemoverInterface} from \"./LoopInterface\";\r\n\r\n/**\r\n * Using `setTimeout(..., 0)` to create a loop instead of `setInterval` has its own advantages and use-cases. Here are a few key advantages:\r\n *\r\n * 1. **Dynamic interval:** With `setTimeout`, you can have a dynamic interval, meaning the time between consecutive function calls can be different. This is useful when you want to adjust the delay between calls based on the processing time of each iteration or some other variable condition. With `setInterval`, the time between calls is fixed.\r\n *\r\n * 2. **Prevent overlapping calls:** When using `setTimeout`, the next call is scheduled only after the completion of the current call. This ensures that no two calls of the same function will be executed simultaneously, preventing overlapping calls. With `setInterval`, if the processing time of the function is longer than the interval, it may lead to overlapping calls, causing potential issues.\r\n *\r\n * 3. **Better control over stopping the loop:** With `setTimeout`, you can conditionally decide whether to continue the loop or not by scheduling the next call based on a condition within the function. This provides better control over stopping the loop. With `setInterval`, you would need to use `clearInterval` explicitly to stop the loop, and you might need to add additional checks or flags to control this behavior.\r\n *\r\n * However, it's important to note that using `setTimeout(..., 0)` creates a microtask queue that schedules the next call as soon as the current call stack is empty, which may cause the browser to be less responsive. If you need to create a loop with a constant interval or need to ensure that the browser remains responsive, using `setInterval` might be more appropriate.\r\n *\r\n * Here's an example of how to use `setTimeout` to create a loop:\r\n */\r\n\r\nexport class SetTimeoutLoop implements LoopInterface {\r\n    enable = false;\r\n\r\n    constructor(private callback: LoopCallback, private timeLogger: TimeLoggerInterface, private timeoutMs: number) {\r\n    }\r\n\r\n    start() {\r\n        if (this.enable) {\r\n            throw new Error(\"Loop already started\");\r\n        }\r\n        this.enable = true;\r\n        let prevTime: number = performance.now();\r\n        const myLoop = () => {\r\n            const startTaskTime = performance.now();\r\n            const delta = startTaskTime - prevTime;\r\n            prevTime = startTaskTime;\r\n            this.timeLogger.monitoringStart();\r\n            // Your code here\r\n            this.callback(delta);\r\n            this.timeLogger.monitoringEnd();\r\n            const endTask = performance.now();\r\n            const taskDelta = endTask - startTaskTime;\r\n            // Schedule the next call with a dynamic interval\r\n            if (this.enable) {\r\n                setTimeout(myLoop, (taskDelta > this.timeoutMs) ? 0 : (this.timeoutMs - taskDelta));\r\n            }\r\n        }\r\n        // Start the loop\r\n        myLoop();\r\n    }\r\n\r\n    stop() {\r\n        this.enable = false;\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class SetTimeoutLoopFactory {\r\n\r\n    constructor(\r\n        @inject(TimeLoggerName) private timeLogger: TimeLogger,\r\n        @inject(FrameLoopManagerName) private frameLoop: FrameLoopManager\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * Create a loop based on setTimeout.\r\n     * This loop will try its best to run at the given interval but will not run if the previous call is not finished. (Main difference with setInterval)\r\n     * If the task takes longer than the interval, the next call will be equivalent to a setTimeout(...,0).\r\n     * if the task takes less than the interval, the next call will be equivalent to a setTimeout(...,interval - taskTime).\r\n     * This will work even if the tab is not active but is throtle to 1S\r\n     * Browsers throttle setTimeout calls to a maximum of 1 per second when a tab is hidden to maximize performance on active tabs\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#Inactive_tabs\r\n     * @param name\r\n     * @param callback\r\n     * @param timeoutMs\r\n     */\r\n    create(name: string, callback: LoopCallback, timeoutMs: number = 0): LoopRemoverInterface {\r\n        let loop = new SetTimeoutLoop(callback, this.timeLogger.getTimeLogger(name), timeoutMs);\r\n        this.frameLoop.addLoop(name, loop);\r\n        return {\r\n            loop: loop,\r\n            remover: () => {\r\n                this.frameLoop.removeLoop(name);\r\n            }\r\n        };\r\n    }\r\n}\r\n","import {injectable} from \"inversify\";\r\n\r\nexport interface TimeLoggerInterface {\r\n    monitoringStart: () => void,\r\n    monitoringEnd: () => void\r\n}\r\n\r\nexport const SUFFIX_DELIMITER = \"-\";\r\n\r\n@injectable()\r\nexport class TimeLogger {\r\n\r\n    getTimeLogger(name: string): TimeLoggerInterface {\r\n        name = name.replace(/-[^-]*$/, \"\");//clean the name remove anythings after the last -\r\n        let minTimeMs = 0,\r\n            maxTimeMs = 0,\r\n            totalTimeMs = 0,\r\n            sampleNumber = 0,\r\n            meanTimeMs = 0,\r\n            start = 0,\r\n            last = 0;\r\n        let callbacks1 = this.callbacks;\r\n        return {\r\n            monitoringStart: () => {\r\n                start = performance.now();\r\n            },\r\n            monitoringEnd: () => {\r\n                const nowTime = performance.now();\r\n                const time = nowTime - start;\r\n                //create a mean\r\n                totalTimeMs += time;\r\n                sampleNumber++;\r\n                meanTimeMs = totalTimeMs / sampleNumber;\r\n                maxTimeMs = Math.max(maxTimeMs, time);\r\n                minTimeMs = Math.min(minTimeMs, time);\r\n                //if refresh ok notify\r\n                for (const cb of callbacks1) {\r\n                    if ((nowTime - last) > cb.refreshInterval) {\r\n                        //avoid blocking the main thread\r\n                        (async () => {\r\n                            cb.cb(name, performance.timeOrigin + nowTime,\r\n                                meanTimeMs,\r\n                                minTimeMs,\r\n                                maxTimeMs,\r\n                                sampleNumber,\r\n                                totalTimeMs);\r\n                        })();\r\n                        last = nowTime;\r\n                        totalTimeMs = 0;\r\n                        sampleNumber = 0;\r\n                        meanTimeMs = 0;\r\n                        minTimeMs = Number.MAX_VALUE;\r\n                        maxTimeMs = Number.MIN_VALUE;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    callbacks: ({\r\n        refreshInterval: number,\r\n        cb: (label: string, time: number, duration: number, minTime: number, maxTime: number,\r\n             sampleNumber: number,\r\n             totalTimeMs: number) => void\r\n    })[] = [];\r\n\r\n    onPerfLog(minimumRefreshInterval: number, callback: (\r\n        label: string,\r\n        time: number,\r\n        duration: number,\r\n        minTime: number,\r\n        maxTime: number,\r\n        sampleNumber: number,\r\n        totalTimeMs: number\r\n    ) => void): () => void {\r\n        this.callbacks.push({\r\n            refreshInterval: minimumRefreshInterval,\r\n            cb: callback\r\n        });\r\n        this.enablePerfLog(true);\r\n        return () => {\r\n            this.callbacks = this.callbacks.filter((cb) => cb.cb !== callback);\r\n        }\r\n    }\r\n\r\n    enablePerfLog(activated: boolean) {\r\n    }\r\n}\r\n"],"mappings":"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","names":["src_exports","__export","AnimationFrameLoop","AnimationFrameLoopFactory","AnimationFrameLoopFactoryName","AxLoopModule","FrameLoopManager","FrameLoopManagerName","SUFFIX_DELIMITER","SetIntervalLoop","SetIntervalLoopFactory","SetIntervalLoopFactoryName","SetTimeoutLoop","SetTimeoutLoopFactory","SetTimeoutLoopFactoryName","TimeLogger","TimeLoggerName","__toCommonJS","Reflect","factory","root","exporter","makeExporter","target","previous","key","value","hasOwn","supportsSymbol","toPrimitiveSymbol","iteratorSymbol","supportsCreate","supportsProto","downLevel","HashMap","MakeDictionary","map","functionPrototype","usePolyfill","_Map","CreateMapPolyfill","_Set","CreateSetPolyfill","_WeakMap","CreateWeakMapPolyfill","Metadata","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","IsConstructor","DecorateConstructor","IsObject","IsNull","ToPropertyKey","DecorateProperty","metadata","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","targetMetadata","i","decorated","descriptor","O","P","Create","MetadataKey","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","set","keys","_i","ownKeys_1","hasKey","_a","parentKeys_1","keysObj","iterator","GetIterator","k","next","IteratorStep","nextValue","IteratorValue","e","IteratorClose","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","result","OrdinaryToPrimitive","toString_1","IsCallable","valueOf","toString_2","argument","ToString","V","func","obj","method","iterResult","f","proto","prototype","prototypeProto","constructor","cacheSentinel","arraySentinel","MapIterator","values","selector","index","error","Map","size","getKey","getValue","getEntry","insert","_","Set","UUID_SIZE","rootKey","CreateUniqueKey","WeakMap","table","GetOrCreateWeakMapTable","CreateUUID","create","FillRandomBytes","buffer","GenRandomBytes","data","offset","byte","import_inversify","FrameLoopManagerName","AnimationFrameLoopFactoryName","SetIntervalLoopFactoryName","SetTimeoutLoopFactoryName","TimeLoggerName","import_inversify","AnimationFrameLoop","callback","timeLogger","prevTime","animate","t","delta","AnimationFrameLoopFactory","frameLoop","name","loop","__decorateClass","__decorateParam","TimeLoggerName","FrameLoopManagerName","import_inversify","FrameLoopManager","key","entry","name","loop","__decorateClass","import_inversify","SetIntervalLoop","callback","timeLogger","intervalMs","prevTime","animate","t","delta","SetIntervalLoopFactory","frameLoop","name","loop","__decorateClass","__decorateParam","TimeLoggerName","FrameLoopManagerName","import_inversify","SetTimeoutLoop","callback","timeLogger","timeoutMs","prevTime","myLoop","startTaskTime","delta","taskDelta","SetTimeoutLoopFactory","frameLoop","name","loop","__decorateClass","__decorateParam","TimeLoggerName","FrameLoopManagerName","import_inversify","SUFFIX_DELIMITER","TimeLogger","name","minTimeMs","maxTimeMs","totalTimeMs","sampleNumber","meanTimeMs","start","last","callbacks1","nowTime","time","cb","minimumRefreshInterval","callback","activated","__decorateClass","AxLoopModule","bind","FrameLoopManagerName","FrameLoopManager","TimeLoggerName","TimeLogger","AnimationFrameLoopFactoryName","AnimationFrameLoopFactory","SetTimeoutLoopFactoryName","SetTimeoutLoopFactory","SetIntervalLoopFactoryName","SetIntervalLoopFactory"]}