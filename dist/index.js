var j=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var m=(a,e,o,r)=>{for(var t=r>1?void 0:r?R(e,o):e,n=a.length-1,i;n>=0;n--)(i=a[n])&&(t=(r?i(e,o,t):i(t))||t);return r&&t&&j(e,o,t),t},s=(a,e)=>(o,r)=>e(o,r,a);import{ContainerModule as D}from"inversify";var p=Symbol.for("FrameLoopManagerName"),N=Symbol.for("AnimationFrameLoopFactoryName"),k=Symbol.for("SetIntervalLoopFactoryName"),S=Symbol.for("SetTimeoutLoopFactoryName"),l=Symbol.for("TimeLoggerName");import{inject as w,injectable as A}from"inversify";var v=class{constructor(e,o){this.callback=e;this.timeLogger=o}enable=!1;start(){if(this.enable)throw new Error("Loop already started");this.enable=!0;let e=0,o=r=>{let t=r-e;e=r,this.enable&&requestAnimationFrame(o),this.timeLogger.monitoringStart(),this.callback(t),this.timeLogger.monitoringEnd()};requestAnimationFrame(o)}stop(){this.enable=!1}},c=class{constructor(e,o){this.timeLogger=e;this.frameLoop=o}create(e,o){let r=new v(o,this.timeLogger.getTimeLogger(e));return this.frameLoop.addLoop(e,r),{loop:r,remover:()=>{this.frameLoop.removeLoop(e)}}}};c=m([A(),s(0,w(l)),s(1,w(p))],c);import{injectable as P}from"inversify";var g=class{started=!1;constructor(){}loops=new Map;start(){this.started=!0;for(let[e,o]of this.loops)o.start()}stop(){this.started=!1;for(let[e,o]of this.loops)o.stop()}addLoop(e,o){if(this.loops.has(e))throw new Error("Loop name already used");return this.started&&o.start(),this.loops.set(e,o),()=>{this.removeLoop(e)}}removeLoop(e){this.loops.get(e).stop(),this.loops.delete(e)}};g=m([P()],g);import{inject as y,injectable as U}from"inversify";var d=class{constructor(e,o,r){this.callback=e;this.timeLogger=o;this.intervalMs=r}intervalId=null;start(){if(this.intervalId)throw new Error("Loop already started");let e=0,o=r=>{let t=r-e;e=r,this.timeLogger.monitoringStart(),this.callback(t),this.timeLogger.monitoringEnd()};this.intervalId=setInterval(o,this.intervalMs)}stop(){this.intervalId&&(this.intervalId=null,clearInterval(this.intervalId))}},f=class{constructor(e,o){this.timeLogger=e;this.frameLoop=o}create(e,o,r=0){let t=new d(o,this.timeLogger.getTimeLogger(e),r);return this.frameLoop.addLoop(e,t),{loop:t,remover:()=>{this.frameLoop.removeLoop(e)}}}};f=m([U(),s(0,y(l)),s(1,y(p))],f);import{inject as F,injectable as _}from"inversify";var T=class{constructor(e,o,r){this.callback=e;this.timeLogger=o;this.timeoutMs=r}enable=!1;start(){if(this.enable)throw new Error("Loop already started");this.enable=!0;let e=performance.now(),o=()=>{let r=performance.now(),t=r-e;e=r,this.timeLogger.monitoringStart(),this.callback(t),this.timeLogger.monitoringEnd();let i=performance.now()-r;this.enable&&setTimeout(o,i>this.timeoutMs?0:this.timeoutMs-i)};o()}stop(){this.enable=!1}},L=class{constructor(e,o){this.timeLogger=e;this.frameLoop=o}create(e,o,r=0){let t=new T(o,this.timeLogger.getTimeLogger(e),r);return this.frameLoop.addLoop(e,t),{loop:t,remover:()=>{this.frameLoop.removeLoop(e)}}}};L=m([_(),s(0,F(l)),s(1,F(p))],L);import{injectable as q}from"inversify";var ae="-",b=class{getTimeLogger(e){e=e.replace(/-[^-]*$/,"");let o=0,r=0,t=0,n=0,i=0,I=0,M=0,C=this.callbacks;return{monitoringStart:()=>{I=performance.now()},monitoringEnd:()=>{let h=performance.now(),u=h-I;t+=u,n++,i=t/n,r=Math.max(r,u),o=Math.min(o,u);for(let x of C)h-M>x.refreshInterval&&((async()=>x.cb(e,performance.timeOrigin+h,i,o,r,n,t))(),M=h,t=0,n=0,i=0,o=Number.MAX_VALUE,r=Number.MIN_VALUE)}}}callbacks=[];onPerfLog(e,o){return this.callbacks.push({refreshInterval:e,cb:o}),this.enablePerfLog(!0),()=>{this.callbacks=this.callbacks.filter(r=>r.cb!==o)}}enablePerfLog(e){}};b=m([q()],b);var E=class{getModule(){return new D(e=>{e(p).to(g).inSingletonScope(),e(l).to(b).inSingletonScope(),e(N).to(c).inSingletonScope(),e(S).to(L).inSingletonScope(),e(k).to(f).inSingletonScope()})}};export{v as AnimationFrameLoop,c as AnimationFrameLoopFactory,N as AnimationFrameLoopFactoryName,E as AxLoopModule,g as FrameLoopManager,p as FrameLoopManagerName,ae as SUFFIX_DELIMITER,d as SetIntervalLoop,f as SetIntervalLoopFactory,k as SetIntervalLoopFactoryName,T as SetTimeoutLoop,L as SetTimeoutLoopFactory,S as SetTimeoutLoopFactoryName,b as TimeLogger,l as TimeLoggerName};
//# sourceMappingURL=index.js.map